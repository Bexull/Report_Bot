import calendar
from datetime import date
from aiogram import types
from aiogram.fsm.context import FSMContext

from app.states.calculation_states import CalculationStates
from app.services.calculation import CalculationService
from app.keyboards.reply import ReplyKeyboards
from app.config.settings import MONTH_NAMES


async def process_supplier_code_input(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–≤–æ–¥ –∫–æ–¥–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"""
    await callback_query.message.edit_text(
        "üî¢ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1064):\n\n"
        "–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:"
    )
    
    await state.set_state(CalculationStates.waiting_for_supplier_code)
    await callback_query.answer()


async def process_supplier_selection(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"""
    supplier_index = int(callback_query.data.split("_")[1])
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    suppliers = data.get("suppliers", [])
    
    if supplier_index >= len(suppliers):
        await callback_query.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞")
        return
    
    selected_supplier = suppliers[supplier_index]
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    await state.update_data(selected_supplier=selected_supplier)
    
    await callback_query.message.edit_text(
        f"‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: {selected_supplier}\n\n"
        "üìÖ –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025):"
    )
    
    await state.set_state(CalculationStates.waiting_for_year)
    await callback_query.answer()


async def process_month_selection(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞"""
    month = int(callback_query.data.split("_")[1])
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    supplier_name = data.get("selected_supplier")
    year = data.get("year")
    
    if not supplier_name or not year:
        await callback_query.answer("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞—Ç—ã
    start_date = date(year, month, 1)
    _, days_in_month = calendar.monthrange(year, month)
    end_date = date(year, month, days_in_month)
    
    await callback_query.message.edit_text(
        f"üîÑ –í—ã–ø–æ–ª–Ω—è—é —Ä–∞—Å—á–µ—Ç –¥–ª—è:\n"
        f"üè¢ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {supplier_name}\n"
        f"üìÖ –ü–µ—Ä–∏–æ–¥: {MONTH_NAMES[month-1].title()} {year}\n"
        f"üìÖ –î–∞—Ç—ã: {start_date} - {end_date}\n\n"
        f"‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ..."
    )
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç
    result = await CalculationService.perform_calculation(supplier_name, start_date, end_date)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await callback_query.message.edit_text(result, parse_mode="HTML")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
    keyboard = ReplyKeyboards.get_new_calculation_menu()
    
    await callback_query.message.answer(
        "üîÑ –•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç?",
        reply_markup=keyboard
    )
    
    await callback_query.answer()